JavaScript Loops:
Loops are used to execute the same block of code again and again, as long as a certain 
condition is met. The basic idea behind a loop is to automate the repetitive tasks within 
a program to save the time and effort. JavaScript now supports five different types of 
loops:

for — loops through a block of code until the counter reaches a specified number.
while — loops through a block of code as long as the condition specified evaluates to true.
do…while — loops through a block of code once; then the condition is evaluated. If the 
condition is true, the statement is repeated as long as the specified condition is true.
for…in — loops through the properties of an object.
for…of — loops over iterable objects such as arrays, strings, etc.
All loops are built in three main principles:

I-Initialization
C-Condition
U-Update
initialization — it is used to initialize the counter variables, and evaluated once 
unconditionally before the first execution of the body of the loop.
condition — it is evaluated at the beginning of each iteration. If it evaluates to true, 
the loop statements execute. If it evaluates to false, the execution of the loop ends.
update — it updates the loop counter with a new value each time the loop runs.
The do...while Loop
The do-while loop is a variant of the while loop, which evaluates the condition at the end 
of each loop iteration. With a do-while loop the block of code executed once, and then the 
condition is evaluated, if the condition is true, the statement is repeated as long as the 
specified condition evaluated to is true. The generic syntax of the do-while loop is:

do {
    // Code to be executed
}
while(condition);
Difference Between while and do...while Loop
The while loop differs from the do-while loop in one important way — with a while loop, 
the condition to be evaluated is tested at the beginning of each loop iteration, so if the 
conditional expression evaluates to false, the loop will never be executed.

With a do-while loop, on the other hand, the loop will always be executed once even if the 
conditional expression evaluates to false, because unlike the while loop, the condition is 
evaluated at the end of the loop iteration rather than the beginning.

